import React, { useState } from 'react';

import InputLabel from '@material-ui/core/InputLabel';
import FormControl from '@material-ui/core/FormControl';
import Select from '@material-ui/core/Select';
import MenuItem from '@material-ui/core/MenuItem';
import { makeStyles } from '@material-ui/core/styles';

import { isEmpty } from "../../app/Functions";

const useStyles = makeStyles(theme => ({
    root: {
        display: 'flex',
        flexWrap: 'wrap',
    },
    formControl: {
        margin: theme.spacing(1),
        minWidth: 120,
    },
    selectEmpty: {
        marginTop: theme.spacing(2),
    },
    level0: {
        backgroundColor: 'green !important'
    },
    level1: {
        backgroundColor: 'blue !important'
    },
    level2: {
        backgroundColor: 'orange !important'
    },
    level3: {
        backgroundColor: 'red !important'
    },
    select: {
    }
}));

function getCategoryMenuItems(categories, letter, name) {
    let status = [];

    let style = {backgroundColor: "red !important"};

    if(categories) {
        status.push();
        for( let i = 0; i < categories.length; i++) {
            status.push(<MenuItem key={letter+i} data-value={name+"|"+categories[i].id+"|"+categories[i].status_score} value={categories[i].status_name} style={style}>{categories[i].status_name}</MenuItem>);
        }
    }
    return status;
}

const AccountMotions = (props) => {
    const { onStateChange } = props;
    const [values, setValues] = useState({});
    const classes = useStyles();
    let tmp = props.data;
    let selects = [];
    let test = [];

    if(tmp.data) {
        if(isEmpty(values)) {
            for(let i = 0; i < tmp.data.length; i++) {
                test.push(tmp.data[i].status_name);
            }
            setValues(test);
        } else {
            test = values;
        }
    }

    const handleChange = event => {
        let name = event.target.name.split("_");
        if(name.length === 2) {
            let pos = tmp.data.findIndex(i => i.salesmotion_name === name[1]);
            test[pos] = event.target.value;
        }
        setValues(test);
        onStateChange(test);
    }

    if(tmp.data) {
        var letters = ["b", "c" , "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]
        for(let i = 0; i < tmp.data.length; i++) {
            let item = getCategoryMenuItems(tmp.categories, letters[i], tmp.data[i].salesmotion_name);
            selects.push(
                <FormControl variant="filled" className={classes.formControl} key={"formControl_"+i}>
                    <InputLabel htmlFor={"selectStatus_"+tmp.data[i].salesmotion_name}>{unescape(tmp.data[i].salesmotion_name)}</InputLabel>
                    <Select
                    key={"select_"+i}
                    value={test[i]}
                    onChange={handleChange}
                    inputProps={{
                        name: 'selectStatus_'+tmp.data[i].salesmotion_name,
                        id: 'selectStatus_'+tmp.data[i].salesmotion_name,
                    }}
                    className={classes.select}
                    >
                        {item}
                    </Select>
                </FormControl>
            );
        }
    }  

    return(
        <form name="selects">{selects}</form>
    );
}

export default AccountMotions;